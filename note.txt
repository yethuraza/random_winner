$(document).ready(function () {
    // cus and prod data array
    var customer_arr = [];
    var product_arr = [];
    var cus_id = [];
    var prod_id = [];

    $.ajax({
        url: "getCustomer",
        method: "GET",
        success: function (data) {
            // console.log(data);
            $.each(data.customer, function (i, v) {
                var name = v.name;
                var id = v.id;

                customer_arr.push(name);
                cus_id.push(id);
            });

            $.each(data.product, function (i, v) {
                var name = v.name;
                var id = v.id;

                product_arr.push(name);
                prod_id.push(id);
            });

            initializeSlotMachine();
        },
    });

    function initializeSlotMachine() {
        var customer_length = customer_arr.length;
        var product_length = product_arr.length;
        var customer_height = customer_length * 350;
        var product_height = product_length * 350;
        var customer_divider = customer_height / customer_length;
        var product_divider = product_height / product_length;

        var tMax = 3000;
        var speeds = [];
        var r_c = [];
        var r_p = [];
        var customer_start, product_start;
        var customer_reels, product_reels;

        function initial() {
            customer_reels = $(".customer_reel").each(function (i, v) {
                v.innerHTML =
                    "<div><p>" +
                    customer_arr.join("</p><p>") +
                    "</p></div><div><p>" +
                    customer_arr.join("</p><p>") +
                    "</p></div>";
            });
            product_reels = $(".product_reel").each(function (i, v) {
                v.innerHTML =
                    "<div><p>" +
                    product_arr.join("</p><p>") +
                    "</p></div><div><p>" +
                    product_arr.join("</p><p>") +
                    "</p></div>";
            });

            $("#startSlot").click(action);
        }
        function action() {
            for (var i = 0; i < 2; ++i) {
                speeds[i] = Math.random() + 2.5;
                r_c[i] =
                    (((Math.random() * customer_length) | 0) *
                        customer_height) /
                    customer_length;
                r_p[i] =
                    (((Math.random() * product_length) | 0) * product_height) /
                    product_length;
            }
            $("#startSlot").toggleClass("hidden");
            $(".TwoColorBtn").css({
                opacity: 0,
            });
            customer_animate();
            setTimeout(() => {
                product_animate();
            }, 600);
        }

        function customer_animate(now) {
            if (!customer_start) {
                customer_start = now;
            }

            var t = now - customer_start || 0;
            for (var i = 0; i < 2; ++i) {
                var current_reel = customer_reels[i];
                if (current_reel) {
                    customer_reels[i].scrollTop =
                        ((speeds[i] / tMax / 0.5) * (tMax - t) * (tMax - t) +
                            r_c[i]) %
                            customer_height |
                        0;
                }
            }
            if (t < tMax) {
                requestAnimationFrame(customer_animate);
            } else {
                customer_start = undefined;
                customer_check();
            }
        }
        function product_animate(now) {
            if (!product_start) {
                product_start = now;
            }

            var t = now - product_start || 0;
            for (var i = 0; i < 2; ++i) {
                var current_reel = product_reels[i];
                if (current_reel) {
                    product_reels[i].scrollTop =
                        ((speeds[i] / tMax / 0.5) * (tMax - t) * (tMax - t) +
                            r_p[i]) %
                            product_height |
                        0;
                }
            }

            if (t < tMax) {
                requestAnimationFrame(product_animate);
            } else {
                product_start = undefined;
                product_check();
            }
        }

        function customer_check() {
            $("#cus_id").val(cus_id[(r_c[0] / customer_divider + 1) % customer_length | 0]);
            console.log(customer_arr[(r_c[0] / customer_divider + 1) % customer_length | 0]);
        }   
        function product_check() {
            $("#prod_id").val(prod_id[(r_p[0] / product_divider + 1) % product_length | 0]);
            console.log(product_arr[(r_p[0] / product_divider + 1) % product_length | 0]);
            winner_effect();
            setTimeout(saveWinner,3000);
        }
        function saveWinner() {
                var cus_id = $("#cus_id").val();
                var prod_id = $("#prod_id").val();

                console.log(cus_id, prod_id);
                $.ajax({
                    url: "uploadWinner",
                    method: "POST",
                    data: { cus_id, prod_id },
                    headers: {
                        "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr(
                            "content"
                        ),
                    },
                    success: function () {
                        // console.log("Successfully Saved Winner");
                        location.reload();
                    },
                });
            }
        function winner_effect() {
            let W = window.innerWidth;
            let H = window.innerHeight;
            const canvas = document.getElementById("canvas");
            const context = canvas.getContext("2d");
            const maxConfettis = 150;
            const particles = [];

            const possibleColors = [
                "DodgerBlue",
                "OliveDrab",
                "Gold",
                "Pink",
                "SlateBlue",
                "LightBlue",
                "Gold",
                "Violet",
                "PaleGreen",
                "SteelBlue",
                "SandyBrown",
                "Chocolate",
                "Crimson",
            ];

            function randomFromTo(from, to) {
                return Math.floor(Math.random() * (to - from + 1) + from);
            }

            function confettiParticle() {
                this.x = Math.random() * W; // x
                this.y = Math.random() * H - H; // y
                this.r = randomFromTo(11, 33); // radius
                this.d = Math.random() * maxConfettis + 11;
                this.color =
                    possibleColors[
                        Math.floor(Math.random() * possibleColors.length)
                    ];
                this.tilt = Math.floor(Math.random() * 33) - 11;
                this.tiltAngleIncremental = Math.random() * 0.07 + 0.05;
                this.tiltAngle = 0;

                this.draw = function () {
                    context.beginPath();
                    context.lineWidth = this.r / 2;
                    context.strokeStyle = this.color;
                    context.moveTo(this.x + this.tilt + this.r / 3, this.y);
                    context.lineTo(
                        this.x + this.tilt,
                        this.y + this.tilt + this.r / 5
                    );
                    return context.stroke();
                };
            }

            function Draw() {
                const results = [];

                // Magical recursive functional love
                requestAnimationFrame(Draw);

                context.clearRect(0, 0, W, window.innerHeight);

                for (var i = 0; i < maxConfettis; i++) {
                    results.push(particles[i].draw());
                }

                let particle = {};
                let remainingFlakes = 0;
                for (var i = 0; i < maxConfettis; i++) {
                    particle = particles[i];

                    particle.tiltAngle += particle.tiltAngleIncremental;
                    particle.y +=
                        (Math.cos(particle.d) + 3 + particle.r / 2) / 2;
                    particle.tilt = Math.sin(particle.tiltAngle - i / 3) * 15;

                    if (particle.y <= H) remainingFlakes++;

                    // If a confetti has fluttered out of view,
                    // bring it back to above the viewport and let if re-fall.
                    if (
                        particle.x > W + 30 ||
                        particle.x < -30 ||
                        particle.y > H
                    ) {
                        particle.x = Math.random() * W;
                        particle.y = -30;
                        particle.tilt = Math.floor(Math.random() * 10) - 20;
                    }
                }

                return results;
            }

            window.addEventListener(
                "resize",
                function () {
                    W = window.innerWidth;
                    H = window.innerHeight;
                    canvas.width = window.innerWidth;
                    canvas.height = window.innerHeight;
                },
                false
            );

            // Push new confetti objects to `particles[]`
            for (var i = 0; i < maxConfettis; i++) {
                particles.push(new confettiParticle());
            }

            // Initialize
            canvas.width = W;
            canvas.height = H;
            Draw();
        }

        initial();
    }

    $("#myTable").DataTable({
        dom: "Bfrtip",
        buttons: ["copy", "csv", "excel", "pdf",{

                extend: 'print',
                customize: function ( win ) {
                    $(win.document.body)
                        .css( 'background', 'white' );

                    
                }

        }],
        ordering: false,
    });

    $("#CusTB").DataTable({
        ordering: false,
    });
    $("#productTB").DataTable({
        ordering: false,
    });
});



const getCHBG = document.querySelector(".chbg");
var chbgbox = document.querySelector(".chbgbox");
var getmainHeader = document.querySelector(".mainHeaders");
getCHBG.addEventListener("click", function () {
    chbgbox.classList.toggle("hidden");
});

var color1 = document.querySelector(".color1");
var color2 = document.querySelector(".color2");
var body = document.getElementById("gradient");

function setGradient() {
    body.style.background =
        "linear-gradient(to right, " + color1.value + ", " + color2.value + ")";
    // Store the colors in localStorage
    localStorage.setItem("color1", color1.value);
    localStorage.setItem("color2", color2.value);
}

// Set initial gradient on page load
function setInitialGradient() {
    var savedColor1 = localStorage.getItem("color1");
    var savedColor2 = localStorage.getItem("color2");

    if (savedColor1 && savedColor2) {
        color1.value = savedColor1;
        color2.value = savedColor2;
        setGradient();
    }
}

var clearDef = document.getElementById("clearDef");
clearDef.addEventListener("click", function () {
    localStorage.clear();
    location.reload();
});

// Add event listeners
color1.addEventListener("input", setGradient);
color2.addEventListener("input", setGradient);

// Set initial gradient on page load
document.addEventListener("DOMContentLoaded", setInitialGradient);